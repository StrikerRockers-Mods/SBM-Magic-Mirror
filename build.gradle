buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

repositories {
}

version = project.mod_version
archivesBaseName = project.mod_name + '-' + project.minecraft_version

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: project.minecraft_version
    runs {
        client {
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run')
            source sourceSets.main
        }
        server {
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run')
            source sourceSets.main
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
}


jar {
    from('/') {
        include 'LICENSE.txt'
    }
    manifest.attributes([
            "Specification-Title"     : archivesBaseName,
            "Specification-Vendor"    : "StrikerRocker",
            "Specification-Version"   : version,
            "Implementation-Title"    : archivesBaseName,
            "Implementation-Version"  : version,
            "Implementation-Vendor"   : "StrikerRocker",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
}

task setupGithubActions() {
    doLast {
        exec {
            commandLine "echo", "##[set-output name=version;]${project.mod_version}"
        }
        exec {
            commandLine "echo", "##[set-output name=mod_name;]${project.mod_name}"
        }
        exec {
            commandLine "echo", "##[set-output name=minecraft_version;]${project.minecraft_version}"
        }
        exec {
            commandLine "echo", "##[set-output name=curse_project_id;]${project.curse_project_id}"
        }
        exec {
            commandLine "echo", "##[set-output name=curse_versions;]${project.curse_versions}"
        }
        if (rootProject.hasProperty('curse_relations')) {
            exec {
                commandLine "echo", "##[set-output name=curse_relations;]${project.curse_relations_fabric}"
            }
        }
    }
}